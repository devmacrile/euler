
R version 3.2.4 (2016-03-10) -- "Very Secure Dishes"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> "
+ Using names.txt (right click and 'Save Link/Target As...'), a 46K text file 
+ containing over five-thousand first names, begin by sorting it into alphabetical 
+ order. Then working out the alphabetical value for each name, multiply this value 
+ by its alphabetical position in the list to obtain a name score. For example, 
+ when the list is sorted into alphabetical order, COLIN, which is worth 3 + 
+ 15 + 12 + 9 + 14 = 53, is the 938th name in the list. So, COLIN would obtain a 
+ score of 938  53 = 49714. What is the total of all the name scores in the file?
+ "
[1] "\nUsing names.txt (right click and 'Save Link/Target As...'), a 46K text file \ncontaining over five-thousand first names, begin by sorting it into alphabetical \norder. Then working out the alphabetical value for each name, multiply this value \nby its alphabetical position in the list to obtain a name score. For example, \nwhen the list is sorted into alphabetical order, COLIN, which is worth 3 + \n15 + 12 + 9 + 14 = 53, is the 938th name in the list. So, COLIN would obtain a \nscore of 938  53 = 49714. What is the total of all the name scores in the file?\n"
> 
> setwd("/Users/rileyde/Documents/projects/euler/data")
> names = read.csv("names.txt", header=F)
Warning message:
In read.table(file = file, header = header, sep = sep, quote = quote,  :
  incomplete final line found by readTableHeader on 'names.txt'
> names[which(is.na(names) == T)] <- "N A" 
> names = sort(names)
> 
> # list mapping letters onto 'scores'
> # score is which letter of the alphabet it is
> letterScores = list()
> for(i in 1:26){
+     letterScores[LETTERS[i]] = i
+ }
> letterScores[" "] = 0  # just in case??
> 
> 
> nameScore = function(name){
+     # i.e. COLIN = 3 + 15 + 12 + 9 + 14 = 53
+     if(name == "N A") return(15)
+     score = 0
+     name = strsplit(name, split="")
+     for(i in name[[1]]){
+         score = score + letterScores[[i]]
+     }
+     return(score)
+ }
> 
> start = proc.time()
> 
> # calculate name score for each name
> nscores = rep(0, length(names))
> for(i in 1:length(names)){
+     nscores[i] = nameScore(as.character(names[[i]]))
+ }
> 
> # name sort index
> index <- c(1:length(names))
> 
> nameAndScore <- data.frame(t(as.vector(names)))
> nameAndScore <- cbind(cbind(nameAndScore, index), nscores)
> totalNameScores = apply(nameAndScore[,c(2,3)], 1, prod)
> 
> elapsed = proc.time() - start
> cat(paste("The solution is ", sum(totalNameScores), ", found in ", elapsed[[3]], " seconds", sep=""))
The solution is 871198282, found in 0.214 seconds> # The solution is 871198282, found in 0.548999999882653 seconds
> 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  1.056   0.047   1.094 
